@use 'sass:math';

// 数値を取り出す
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return math.div($number, $number * 0 + 1);
  }

  @return $number;
}

// カラーコードからrgbaを出力
@function rgba-color($color, $alpha: 1) {
  @return rgba(red($color), green($color), blue($color), $alpha);
}

@function rem-clamp($min, $max, $minViewport: 375, $maxViewport: 1440) {
  $vwScale: math.div(($max - $min), ($maxViewport - $minViewport)); // vw単位でのスケールを計算
  $baseOffset: $min - $minViewport * $vwScale; // 基準となる最小値からのオフセットを計算

  $minRem: math.div($min, 16); // 最小値をremに変換
  $maxRem: math.div($max, 16); // 最大値をremに変換
  $baseOffsetRem: math.div($baseOffset, 16); // オフセットをremに変換
  $vwScaleRem: $vwScale * 100; // vwスケールを調整

  @return clamp(#{$minRem}rem, #{$baseOffsetRem}rem + #{$vwScaleRem}vw, #{$maxRem}rem);
}

// 使用例
// font-size: rem-clamp(24, 64, 375, 1200);
// rem-clamp(スマホ時の値(px), PC時の値(px), スマホの画面幅(min), PCの画面幅(max))
// 出力はremになる
